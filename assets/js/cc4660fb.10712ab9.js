"use strict";(self.webpackChunkreact_native_siri_shortcut_docs=self.webpackChunkreact_native_siri_shortcut_docs||[]).push([[205],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return h}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),h=o,f=d["".concat(c,".").concat(h)]||d[h]||p[h]||a;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5414:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return d}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=n(8825),s=["components"],c={},u="Presenting Shortcuts",l={unversionedId:"api/presenting-shortcuts",id:"api/presenting-shortcuts",title:"Presenting Shortcuts",description:"Present a shortcut to the user so they can add/edit/remove from their Shortcuts App.",source:"@site/docs/api/presenting-shortcuts.mdx",sourceDirName:"api",slug:"/api/presenting-shortcuts",permalink:"/docs/api/presenting-shortcuts",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/presenting-shortcuts.mdx",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"List Recorded Shortcuts",permalink:"/docs/api/list-recorded-shortcuts"},next:{title:"Suggesting Shortcuts",permalink:"/docs/api/suggesting-shortcuts"}},p={},d=[{value:"API Definition",id:"api-definition",level:2},{value:"<code>presentShortcut</code>",id:"presentshortcut",level:3},{value:"Type Reference",id:"type-reference",level:2},{value:"<code>ShortcutOptions</code>",id:"shortcutoptions",level:3},{value:"<code>PresentShortcutCallbackData</code>",id:"presentshortcutcallbackdata",level:3}],h={toc:d};function f(e){var t=e.components,c=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},h,c,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"presenting-shortcuts"},"Presenting Shortcuts"),(0,a.kt)("p",null,"Present a shortcut to the user so they can add/edit/remove from their Shortcuts App."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Presentation Example"),(0,a.kt)("p",null,"  ",(0,a.kt)("img",{alt:"Present Shortcut Example",src:n(1204).Z,width:"1170",height:"2532"}))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { presentShortcut } from "react-native-siri-shortcuts";\n\npresentShortcut(orderTaxiShortcut, ({ status, phrase }) => {\n  console.log(`${status} order taxi shortcut with phrase: ${phrase}`);\n});\n')),(0,a.kt)("h2",{id:"api-definition"},"API Definition"),(0,a.kt)("h3",{id:"presentshortcut"},(0,a.kt)("inlineCode",{parentName:"h3"},"presentShortcut")),(0,a.kt)("p",null,"Takes a shortcut and a callback function which will be called when the user dismisses the modal."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"presentShortcut(\n  shortcut: ShortcutOptions,\n  callback: (data: PresentShortcutCallbackData) => void,\n);\n")),(0,a.kt)("h2",{id:"type-reference"},"Type Reference"),(0,a.kt)("h3",{id:"shortcutoptions"},(0,a.kt)("inlineCode",{parentName:"h3"},"ShortcutOptions")),(0,a.kt)(i.ZP,{mdxType:"ShortcutOptions"}),(0,a.kt)("h3",{id:"presentshortcutcallbackdata"},(0,a.kt)("inlineCode",{parentName:"h3"},"PresentShortcutCallbackData")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'type PresentShortcutCallbackData = {\n  status: "cancelled" | "added" | "deleted" | "updated";\n  phrase: string | undefined;\n};\n')))}f.isMDXComponent=!0},8825:function(e,t,n){n.d(t,{ZP:function(){return c}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],s={toc:[]};function c(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"{\n  /** The activity type with which the user activity object was created. */\n  activityType: string;\n  /** An optional, user-visible title for this activity, such as a document name or web page title. */\n  title?: string;\n  /** A set of keys that represent the minimal information about the activity that should be stored for later restoration. */\n  requiredUserInfoKeys?: Array<string>;\n  /** A dictionary containing app-specific state information needed to continue an activity on another device. */\n  userInfo?: { [key: string]: any };\n  /** Indicates that the state of the activity needs to be updated. */\n  needsSave?: boolean;\n  /** A set of localized keywords that can help users find the activity in search results. */\n  keywords?: Array<string>;\n  /** A value used to identify the user activity. */\n  persistentIdentifier?: string;\n  /** A Boolean value that indicates whether the activity can be continued on another device using Handoff. */\n  isEligibleForHandoff?: boolean;\n  /** A Boolean value that indicates whether the activity should be added to the on-device index. */\n  isEligibleForSearch?: boolean;\n  /** A Boolean value that indicates whether the activity can be publicly accessed by all iOS users. */\n  isEligibleForPublicIndexing?: boolean;\n  /** The date after which the activity is no longer eligible for Handoff or indexing. In ms since Unix Epox */\n  expirationDate?: number;\n  /** Webpage to load in a browser to continue the activity. */\n  webpageURL?: string;\n  /** A Boolean value that determines whether Siri can suggest the user activity as a shortcut to the user. */\n  isEligibleForPrediction?: boolean;\n  /** A phrase suggested to the user when they create a shortcut. */\n  suggestedInvocationPhrase?: string;\n  /** Content type of this shorcut. Check available options at https://developer.apple.com/documentation/mobilecoreservices/uttype/uti_abstract_types */\n  contentType?: string;\n  /** An optional description for the shortcut. */\n  description?: string;\n}\n")))}c.isMDXComponent=!0},1204:function(e,t,n){t.Z=n.p+"assets/images/present-shortcut-example-a061a9da526ff5ac1134e4c569bf39c9.png"}}]);